@import '../base.scss';

.board {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: space-between;
  width: 100%;
}

.row {
  display: flex;
  justify-content: space-between;
}

.card {
  box-sizing: border-box;
  color: #555;
  cursor: pointer;
  font-family: 'Oswald', sans-serif;
  font-weight: 500;
  height: 15vh;
  perspective: 20em;
  width: 19%;

  .cardInner {
    $shadow-color: #222;

    bottom: 0;
    box-shadow: 0 0.2em 0 $shadow-color;
    height: 100%;
    perspective: 50em;
    position: relative;
    transform-style: preserve-3d;
    width: 100%;

    &:not([data-revealed='true']):hover {
      bottom: 0.1em;
      box-shadow: 0 0.3em 0 $shadow-color;
    }

    &:not([data-revealed='true']):active {
     bottom: 0em;  
     box-shadow: 0 0.2em 0 $shadow-color;
    }

    & > div {
      align-items: center;
      backface-visibility: hidden;
      box-sizing: border-box;
      display: flex;
      height: 100%;
      justify-content: center;
      left: 0;
      padding: 0.1em;
      position: absolute;
      text-align: center;
      top: 0;
      width: 100%;
      word-break: break-word;
    }

    .cardFront {
      background: #c7cbd1;
    }

    .cardBack {
      transform: rotateY(180deg);
    }

    &[data-revealed='true'] {
      bottom: -0.1em;
      box-shadow: none;
      cursor: default;
      transform: rotateY(180deg);
      transition: transform 1s cubic-bezier(0.68, -0.6, 0.32, 1.6);
    }

    &[data-type='blue'] .cardBack {
      background: $blue-background;
      color: $blue-foreground;
    }

    &[data-type='red'] .cardBack {
      background: $red-background;
      color: $red-foreground;
    }

    &[data-type='bystander'] .cardBack {
      background: $bystander-background;
      color: $bystander-foreground;
    }

    &[data-type='assassin'] .cardBack {
      background: $assassin-background;
      color: $assassin-foreground;
    }
  }
}

.bottomBar {
  align-items: center;
  box-sizing: border-box;
  display: flex;
  font-family: 'Oswald', sans-serif;
  font-weight: 500;
  justify-content: space-between;
  margin-top: 0.5em;
  width: 100%;
}

.status {
  display: flex;
  font-family: 'Teko', sans-serif;
  font-size: 1.2em;
  text-transform: uppercase;

  .currentTurn {
    width: 5em;

    &[data-turn='blue'], &[data-turn='blue_win'] {
      color: $blue-text;
    }

    &[data-turn='red'], &[data-turn='red_win'] {
      color: $red-text;
    }

    &[data-turn='blue_win'], &[data-turn='red_win'] {
      text-transform: uppercase;
    }
  }

  .remaining {
    color: #777;
    display: flex;

    .blueLeft {
      color: $blue-text;
      margin-right: 0.1em;
    }

    .redLeft   {
      color: $red-text;
      margin-left: 0.1em;
    }
  }
}

.controls {
  display: flex;
  font-family: 'Oswald', sans-serif;
  font-size: 0.8em;
  font-weight: 500;

  & > div {
    background: #c7cbd1;
    bottom: 0.15em;
    box-shadow: 0 0.15em 0 $accent-shadow;
    color: $accent-text;
    cursor: pointer;
    padding: 0.5em;
    position: relative;

    &:last-child {
      margin-left: 0.5em;
    }

    &:not([data-disabled='true']):hover {
      bottom: 0.25em;
      box-shadow: 0 0.25em 0 $accent-shadow
    }

    &:not([data-disabled='true']):active {
      bottom: 0.15em;
      box-shadow: 0 0.15em 0 $accent-shadow
    }

    &[data-disabled='true'] {
      color: #999;
      box-shadow: 0 0.15em 0 #999;
      cursor: not-allowed;
    }
  }

  .newGameButton {
    position: relative;

    .holdIndicator {
      background: rgba(45, 134, 89, 0.2);
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      transition: width 0.1s linear;
      width: 0;

      &[data-holding='true'] {
        transition: width 1s cubic-bezier(0.5, 1, 0.89, 1);
        width: 100%;
      }

      &[data-complete='true'] {
        transition: none;
        width: 0;
      }
    }
  }
}

@media (max-width: $media-small-max-width) {
  .card {
    height: 8vh;
  }
}